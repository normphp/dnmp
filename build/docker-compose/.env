# 通用配置
NETWORKS=dnmpNat
# -------------环境模式配置-------------------
# -------------docker-compose-upstream.yml-------------
UPSTREAM_NGINX_NAME=nginx
UPSTREAM_NGINX_IMAGE=./nginx
UPSTREAM_NGINX_PORTS_HTTP=80
UPSTREAM_NGINX_PORTS_HTTPS=443
UPSTREAM_NGINX_PORTS_HTTP2=8080
UPSTREAM_NGINX_NETWORKS=dnmpNat
# -------------docker-compose-nginx.yml-------------
NGINX_NAME=nginx
NGINX_IMAGE=./nginx
NGINX_PORTS_HTTP=80
NGINX_PORTS_HTTPS=443
NGINX_PORTS_HTTP2=8080
NGINX_NETWORKS=dnmpNat
# -------------docker-compose-postgres.yml-------------
POSTGRES_IMAGE=postgres:11
POSTGRES_BUILD=./postgres
POSTGRES_PORTS=5432
POSTGRES_NETWORKS=dnmpNat
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password-nc-2020@yb
PGSQL_ROOT_PASSWORD=password-nc-2020@yb
POSTGRES_DB=postgres
#-------------docker-compose-redis.yml-------------
REDIS_NAME=redis
REDIS_IMAGE=./redis
REDIS_PASSWORD=123456
REDIS_PORTS=6379
REDIS_NETWORKS=dnmpNat
#-------------docker-compose-mysql.yml-------------
# host和user是联合索引
# 更新访问权限  update user set host = '172.%' where user = 'root' and host = '%';
# 删除用户 drop user 'root'@'%';
# 用户列表 select user, host from user;
# 创建一个数据库 CREATE DATABASE devops DEFAULT CHARSET utf8 COLLATE utf8_general_ci;
#                                             数据库         可访问的ip 可%表示任意字符

grant select,insert,update,create on devops.* to devops@'172.%' identified by '123456';

# 创建用户 grant select,insert,update,create on *.* to root@'172.%' identified by '123456';
# 用户名可以重复：可实现同一个用户名 有不同的访问ip设置 比如想test 用户可以被 1.1.1.1 访问 和1.1.2.1访问就需要创建两次用户
# 刷新权限 flush privileges;

MYSQL_NAME=mysql
MYSQL_BUILD=./mysql
MYSQL_ROOT_PASSWORD=123456
MYSQL_DATABASE=dnmp
MYSQL_USER=dnmp
MYSQL_PASSWORD=dnmp
MYSQL_PORTS=3306
MYSQL_NETWORKS=dnmpNat
#-------------docker-compose-diy-php-fpm.yml-------------
DIY_PHP_FPM_BUILD=./php/diy
DIY_PHP_FPM_IMAGE=./php/diy
DIY_PHP_FPM_PATTERN=diy
DIY_PHP_FPM_NAME=php-fpm
DIY_PHP_FPM_PORTS=9000
DIY_PHP_FPM_NETWORKS=dnmpNat